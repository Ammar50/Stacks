<!doctype html>
<!-- paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/ -->
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!-- Consider adding a manifest.appcache: h5bp.com/d/Offline -->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    
    <title>jQuery UI Date Picker Demo 1</title>
    
    <meta name="description" content="">
    
    <!-- Mobile viewport optimized: h5bp.com/viewport -->
    <meta name="viewport" content="width=device-width">
    
    <!-- link to base styling -->
    <link rel="stylesheet" href="/css/style.css" />    
    <!-- link to jQuery UI styling provided by aspnet CDN -->
    <link rel="stylesheet" href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.19/themes/pepper-grinder/jquery-ui.css" />
  
</head>
<body>
   
    <header>
        <h1>
            jQuery UI DateTimePicker Demo 1</h1>
    </header>

    <div role="main">
        <p>
            Working Demo using jQuery + jQuery UI
        </p>

        <form>
            <fieldset>
                <legend>Date-Time Selectors</legend>

                <p>
                    Making use of the onSelect and onClose event:
                    <br />
                    <input type="text" id="datePicker" name="datePicker" />
                </p>
                <p>
                    Day: <span id="day"></span>
                    <br />
                    Month: <span id="month"></span>
                    <br />
                    Year: <span id="year"></span>
                </p>

            </fieldset>
        </form>

    </div>

    <footer>
    </footer>

    <!-- JavaScript at the bottom for fast page loading -->
    <!-- Grab Google CDN's jQuery, with a protocol relative URL; fall back to local if offline -->
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
    <script>        window.jQuery || document.write('<script src="/js/libs/jquery-1.7.1.min.js"><\/script>')</script>

    <!-- include jQuery UI for core functionality of DatePicker -->
    <script src="//ajax.aspnetcdn.com/ajax/jquery.ui/1.8.19/jquery-ui.min.js"></script>

    <!-- 
        ************************************************************************************************************************
        You could also include a jQuery UI fallback here. See http://timjames.me/jquery-and-jquery-ui-fallbacks for more info 
        Check out the jQuery UI DateTimePicker Plugin here http://timjames.me/jquery-ui-datetimepicker-plugin
        ************************************************************************************************************************
     -->


    <!-- script to perform the magic!-->
    <script>
    $(function () {
            
        /* setting the dayNames and monthNames is optional. This example just shows you how you can modify them or use the defaults */
        $('#datePicker').datepicker({
            dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
            monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
            onSelect: function (dateText) {

                /* get the selected date */
                var selectedDate = $('#datePicker').datepicker('getDate');

                /* get the array of day names and month names from the date picker */
                var dayNames = $('#datePicker').datepicker('option', 'dayNames');
                /* default dayNames can be accessed using $.datepicker._defaults.dayNames; */
                var monthNames = $('#datePicker').datepicker('option', 'monthNames');
                /* default monthNames can be accessed using $.datepicker._defaults.monthNames; */

                /* assign are vars */
                var date = selectedDate.getDate();
                var day = dayNames[selectedDate.getDay()]; // taking the day name from the array of day names 
                var month = monthNames[selectedDate.getMonth()]; // taking the month name from the array of month names
                var year = selectedDate.getFullYear();

                /* update the ui */
                $('#day').html(day + ' ' + date);
                $('#month').html(month);
                $('#year').html(year);

            },
            onClose: function (dateText) {
                /* do something */
            }
        });
    });
    </script>
   
</body>
</html>
